# Nukkit 高级设置
# 警告：此处部分设置是安全的，而一些在设置不当的情况下可能会损害您的服务器
# 升级后，新的设置及默认值将不会自动显示在这里，它们将以默认值运行直到你手动更新配置文件

settings:
 #多语言设置
 #可用：eng, chs, cht, jpn, rus, spa, pol, bra, kor, ukr, deu, ltu, cze
 language: "chs"
 #服务器强制语言
 force-language: false
 shutdown-message: "服务器已关闭"
 #允许使用Query协议查询您的插件
 query-plugins: true
 #当某插件使用不被推荐的API时，在控制台提醒
 deprecated-verbose: true
 #异步线程数量
 #如果设置为auto，则自动识别CPU核心数量（最少4线程）
 async-workers: auto

network:
 #数据包大小阀值（单位：字节）。仅这些包会被压缩
 #设为 0 以压缩全部。设为 -1 以禁用此功能
 batch-threshold: 256
 #压缩等级。等级越高，CPU 占用越高，占用带宽越少
 compression-level: 7
 #异步压缩。通过增加半个/一个 tick 的延迟缓解主线程 CPU 负载
 async-compression: false

debug:
 #当调试级别 > 1 时，将在控制台显示调试信息
 level: 1
 #启用命令 /status /gc
 commands: false

timings:
 #默认启用核心和插件的性能分析
 enabled: false
 #启用详细级别的监控，包括高频记录
 verbose: false
 #以 tick 为单位的历史帧间隔
 #默认五分钟（6000 ticks）
 history-interval: 6000
 #以 tick 为单位的整个分析历史时长
 #默认一小时（72000 ticks）
 #该值上限为历史间隔（history-interval，即上一配置）的 12 倍
 history-length: 72000
 #对于有特殊权限以绕过最大值的服务器的特殊情况
 #最大值有助于保持数据文件大小合理，以便在 Aikar 的性能分析器端进行处理
 #设置此选项不会帮你绕过最大值限制，除非 Aikar 在 API 端添加了一个例外
 bypass-max: false
 #将此设置为 true，你的服务器名就不会被发送出去
 privacy: false
 #设置忽略部分。这些部分不会被送往 Aikar 的性能分析器
 #例如： [all] 或 [settings, timings]
 ignore: []

level-settings:
 #默认生成的地图格式
 default-format: anvil
 #自动改变世界 TPS 以维持每秒 20 ticks（TPS：ticks per second）
 auto-tick-rate: true
 auto-tick-rate-limit: 20
 #设置基本 TPS（1 = 20TPS，2 = 10TPS，以此类推）
 base-tick-rate: 1
 #始终保持玩家Tick，即使其他选项不允许这么做
 always-tick-players: false

chunk-sending:
 #每 tick 内发送给玩家区块的数量
 per-tick: 4
 #玩家附近的区块发送数量
 max-chunks: 192
 #玩家生成前需要的区块数量
 spawn-threshold: 56
 #在内存中存储一系列的区块复制以加快区块发送
 #在多玩家同时加入一个大多是静态的服务器时较有效
 cache-chunks: false

chunk-ticking:
 #每 tick 中处理的区块数量
 per-tick: 40
 #玩家周围区块处理的半径
 tick-radius: 3
 light-updates: false
 clear-tick-list: false

chunk-generation:
 #等待队列中，被生成的区块的数量上限
 queue-size: 8
 #等待队列中，被填充的区块的数量上限
 population-queue-size: 8

ticks-per:
 animal-spawns: 400
 monster-spawns: 1
 autosave: 6000
 cache-cleanup: 900

spawn-limits:
 #实体生成数量设置
 monsters: 70
 animals: 15
 water-animals: 5
 ambient: 15
 
player:
 #决定服务器是否以 players/playername.dat 的形式保存玩家数据。默认 true 为保存。
 #如果设置为 false，nukkit 将不会保存玩家数据，这样一些与玩家数据有关的插件就可以大展身手了。
 save-player-data: true
 
aliases:
 #指令别称
 #例如：
 #showtheversion: version
 #savestop: [save-all, stop]

worlds:
 #这些设定将覆盖 server.properties 中的设定，并支持加载多世界
 #例如：
 #world:
 # seed: 404
 # generator: FLAT:2;7,59x1,3x3,2;1;decoration(treecount=80 grasscount=45)
