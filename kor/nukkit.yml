# Nukkit용 고급 구성 파일
# 이 설정들 중 일부는 안전하지만, 다른 것들은 잘못 수정되면 서버를 미작동하게 할 수 있습니다.
# 새로운 설정/기본은 업그레이드할 때 이 파일에 자동으로 나타나지 않습니다

settings:
 #다국어 설정
 #사용 가능: eng, chs, cht, jpn, rus, spa, pol, bra, kor, ukr, deu, ltu, cze
 language: "kor"
 #모든 문자열을 서버 로캘로 번역해 전송하거나 기기가 처리할 수 있게 할지 여부
 force-language: false
 shutdown-message: "Server closed"
 #Query를 통한 플러그인 목록 보기를 허용합니다
 query-plugins: true
 #플러그인이 사용되지 않는 API 메서드를 사용할 때 콘솔 메시지를 표시합니다
 deprecated-verbose: true
 #AsyncTask Works의 개수
 #auto로 설정하면, 자동으로 코어의 개수를 감지하려고 시도합니다(최소 4개)
 async-workers: auto

network:
 #일괄 처리 패킷에 대한 임곗값(바이트)입니다. 이 패킷들만 압축됩니다
 #모두 압축하려면 0으로 설정하고, 비활성화하려면 -1으로 설정하세요
 batch-threshold: 256
 #일괄 처리된 패킷을 전송할 때 Zlib에 사용되는 압축 수준입니다. 높을수록 더 많은 CPU 사용량으로, 적은 대역폭을 사용합니다
 compression-level: 7
 #압축에 AsyncTasks를 사용합니다. 0.5틱/1틱 지연을 추가하고, 메인 스레드에 더 적은 CPU를 사용합니다
 async-compression: false

debug:
 #1보다 크면, 콘솔에 디버그 메시지를 표시합니다
 level: 1
 #명령어를 활성화합니다: /status /gc
 commands: false

timings:
 #코어와 플러그인 타이밍을 기본적으로 활성화합니다
 enabled: false
 #버보스 수준에서 모니터링을 활성화합니다, 높은 주기 타이밍을 포함합니다
 verbose: false
 #틱 단위의 히스토리 프레임 간 간격
 #기본은 5분(6000틱)입니다
 history-interval: 6000
 #틱 단위의 전체 타이밍 기록 길이
 #기본은 1시간(72000틱)입니다
 #이 값은 최대 히스토리 간격 * 12로 제한됩니다
 history-length: 72000
 #최대를 우회할 수 있는 특별한 권한이 있는 특수한 서버의 경우
 #이 최대는 Aikar의 타이밍 파서 측에서 합당한 데이터 파일 크기를 유지하는 데 도움이 됩니다
 #이 값을 설정하는 것은 Aikar가 API 측에서 예외를 추가하지 않는 이상 최대를 우회하는 데 도움이 되지 않습니다
 bypass-max: false
 #true로 설정된 경우, 서버의 이름이 전송되지 않습니다
 privacy: false
 #무시할 설정 부분입니다. 이 부분은 Aikar의 타이밍 파서로 보내지지 않습니다
 #예: [all] 또는 [settings, timings]
 ignore: []

level-settings:
 #레벨이 생성될 때 사용할 기본 포맷
 default-format: mcregion
 #1초당 20틱을 유지하기 위해 자동으로 레벨의 틱을 변경합니다
 auto-tick-rate: true
 auto-tick-rate-limit: 20
 #기본 틱을 설정합니다 (1 = 1초당 20틱, 2 = 1초당 10틱, 등등.)
 base-tick-rate: 1
 #다른 설정들이 이를 허용하지 않더라도 모든 플레이어를 틱 처리합니다
 always-tick-players: false

chunk-sending:
 #플레이어에게 틱 당 보낼 청크의 양
 per-tick: 4
 #각 플레이어에게 보낼 청크의 양
 max-chunks: 192
 #플레이어를 생성하기 전에 보내져야 할 청크의 양
 spawn-threshold: 56
 #빠른 전송을 위해 메모리에 직렬화된 청크의 복사본을 저장합니다
 #많은 플레이어가 동시에 참여하는 대부분 정적인 세계에서 유용합니다
 cache-chunks: false

chunk-ticking:
 #각 틱 당 처리될 청크의 최대량
 per-tick: 40
 #플레이어 주변의 틱 처리할 청크의 범위
 tick-radius: 3
 light-updates: false
 clear-tick-list: false

chunk-generation:
 #대기열에 있는 생성 대기 중인 청크의 최대량
 queue-size: 8
 #대기열에 있는 채울 대기 중인 청크의 최대량
 population-queue-size: 8

ticks-per:
 animal-spawns: 400
 monster-spawns: 1
 autosave: 6000
 cache-cleanup: 900

spawn-limits:
 #이 개체들의 최대 생성량
 monsters: 70
 animals: 15
 water-animals: 5
 ambient: 15
 
player:
 #true로 설정하면, 플레이어 데이터가 players/플레이어 이름.dat으로 저장됩니다
 #false로 설정하면, Nukkit이 플레이어 데이터를 "dat" 파일로 저장하지 않으므로 플러그인에서 무언가를 수행할 수 있습니다.
 save-player-data: true
 
aliases:
 #명령어의 별칭
 #예:
 # showtheversion: version
 # savestop: [save-all, stop]

worlds:
 #이 설정들은 server.properties에 있는 생성기 설정을 덮어쓰고 여러 레벨 불러오기를 허용합니다
 #예:
 # world:
 # seed: 404
 # generator: FLAT:2;7,59x1,3x3,2;1;decoration(treecount=80 grasscount=45)
